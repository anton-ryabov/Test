1. Какого типа команда cd? Попробуйте объяснить, почему она именно такого типа: опишите ход своих мыслей, если считаете, что она могла бы быть другого типа.

	* Решение: cd — это встроенная команда bash. Думаю потому это основная функция. Допустим при смене переменной PATH на пустоту у нас остается возможность исправить это.
	 
2. Какая альтернатива без pipe команде grep <some_string> <some_file> | wc -l

	* Решение: grep <some_string> <some_file>

3. Какой процесс с PID 1 является родителем для всех процессов в вашей виртуальной машине Ubuntu 20.04?

	* Решение: systemd

4. Как будет выглядеть команда, которая перенаправит вывод stderr ls на другую сессию терминала?

	* Решение: ls \blablabl 2>/dev/pts/1

5. Получится ли одновременно передать команде файл на stdin и вывести ее stdout в другой файл? Приведите работающий пример.

	* Решение: да ls < test.md > test1.md

6. Получится ли, находясь в графическом режиме, вывести данные из PTY в какой-либо из эмуляторов TTY? Сможете ли вы наблюдать выводимые данные?

	* Решение: да, получится. Части pty являются ptm и pts так же являются одним из вариантов эмуляторов tty
	
7. Выполните команду bash 5>&1. К чему она приведет? Что будет, если вы выполните echo netology > /proc/$$/fd/5? Почему так происходит?

	* Решение: bash 5>&1 - добавляется промежуточный дескриптор вывода 5.
	* echo netology > /proc/$$/fd/5 передает сообщение на временный дескриптор через файл. Терминал выведет сообщение netology.

8. Получится ли в качестве входного потока для pipe использовать только stderr команды, не потеряв при этом отображение stdout на pty?
Напоминаем: по умолчанию через pipe передается только stdout команды слева от | на stdin команды справа. Это можно сделать, поменяв стандартные потоки местами через промежуточный новый дескриптор, который вы научились создавать в предыдущем вопросе.

	* Решение: команда1 2>&1 | команда2 
	
9. Что выведет команда cat /proc/$$/environ? Как еще можно получить аналогичный по содержанию вывод?

	* Решение: Выводит информацию о окружении по пид текущего сеанса

10. Используя man, опишите что доступно по адресам /proc/<PID>/cmdline, /proc/<PID>/exe.

	* Решение: /proc/<PID>/cmdline - Этот файл содержит полную командную строку запуска процесса, кроме тех процессов, что полностью ушли в своппинг, а также тех, что превратились в зомби. В этих двух случаях в файле ничего нет, то есть чтение этого файла вернет 0 символов. Аргументы командной строки в этом файле указаны как список строк, каждая из которых завешается нулевым символом, с добавочным нулевым байтом после последней строки.
	* proc/<PID>/exe - exe является символьной ссылкой, содержащей фактическое полное имя выполняемого файла. Символьная ссылка exe может использоваться обычным образом - при попытке открыть exe будет открыт исполняемый файл.

11. Узнайте, какую наиболее старшую версию набора инструкций SSE поддерживает ваш процессор с помощью /proc/cpuinfo.

	* Решение: sse4_2

12. При открытии нового окна терминала и vagrant ssh создается новая сессия и выделяется pty.
Это можно подтвердить командой tty, которая упоминалась в лекции 3.2.
Однако: vagrant@netology1:~$ ssh localhost 'tty'
not a tty. Почитайте, почему так происходит, и как изменить поведение.

	* Решение: потому что не имеет локального терминала. надо переназначить ssh -t localhost 'tty'

13. Бывает, что есть необходимость переместить запущенный процесс из одной сессии в другую. Попробуйте сделать это, воспользовавшись reptyr. Например, так можно перенести в screen процесс, который вы запустили по ошибке в обычной SSH-сессии.

	* Решение: top
	* CTRL-Z
	* bg
	* disown top
	* screen создает новую сессию
	* screen -r id 
	* reptyr pid
	*в убунту выдало ошибку с отказом доступа, решение: от рута echo 0 > /proc/sys/kernel/yama/ptrace_scope

14. sudo echo string > /root/new_file не даст выполнить перенаправление под обычным пользователем, так как перенаправлением занимается процесс shell'а, который запущен без sudo под вашим пользователем. Для решения данной проблемы можно использовать конструкцию echo string | sudo tee /root/new_file. Узнайте? что делает команда tee и почему в отличие от sudo echo команда с sudo tee будет работать.

	* Решение:tee - считывает данные из стандартного устройства ввода и записывает их на стандартное устройство вывода или в файл